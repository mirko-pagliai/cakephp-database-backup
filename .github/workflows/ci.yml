name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  testsuite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', 8.3]
        db-type: [sqlite, mysql, pgsql]
        prefer-lowest: ['']
        exclude:
          - php-version: '8.1'
            db-type: 'sqlite'
          - php-version: '8.1'
            db-type: 'pgsql'
        include:
          - php-version: '8.1'
            db-type: 'mysql'
            prefer-lowest: 'prefer-lowest'
          - php-version: '8.2'
            db-type: 'mysql'
            prefer-lowest: 'prefer-lowest'
          - php-version: '8.3'
            db-type: 'mysql'
            prefer-lowest: 'prefer-lowest'

    steps:
        - name: Setup Database
          run: |
            if ${{ matrix.db-type == 'mysql' }}; then
                docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin
            elif ${{ matrix.db-type == 'pgsql' }}; then
                docker run --rm --name=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=test -p 5432:5432 -d postgres:9.6
            fi

        - uses: actions/checkout@v3

        - name: Validate composer.json and composer.lock
          run: composer validate --strict

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php-version }}
            extensions: mbstring, intl, pdo_${{ matrix.db-type }}

        - name: Cache Composer packages
          id: composer-cache
          uses: actions/cache@v3
          with:
            path: vendor
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-

        - name: Composer install
          run: |
            if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
              composer update --prefer-lowest --prefer-stable
            else
              composer update
            fi

        - name: Composer show
          run: composer show

        - name: Wait for MySQL
          run: |
              if ${{ matrix.db-type == 'mysql' }}; then
                while ! mysqladmin ping --host=127.0.0.1 --password=$MYSQL_ROOT_PASSWORD --silent; do
                  sleep 1
                done
              fi

        - name: Run PHPUnit
          run: |
            if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export db_dsn='sqlite:////tmp/cakephp-database-backup/test.sq3'; fi
            if [[ ${{ matrix.db-type }} == 'mysql' ]]; then export db_dsn='mysql://root:root@127.0.0.1/test?encoding=utf8'; fi
            if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export db_dsn='postgres://postgres:postgres@127.0.0.1/test'; fi

            if [[ ${{ matrix.php-version }} == '8.0' ]]; then
             export XDEBUG_MODE=coverage && vendor/bin/phpunit --coverage-clover=coverage.xml
            else
              vendor/bin/phpunit
            fi

        - name: Submit code coverage
          if: matrix.php-version == '8.0'
          uses: codecov/codecov-action@v3

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v3

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.1'
            coverage: none
            tools: cs2pr

        - name: Composer install
          run: composer update

        - name: Composer show
          run: composer show

        - name: Run PHP CodeSniffer
          continue-on-error: true
          run: vendor/bin/phpcs --report-full --report-checkstyle=./phpcs-report.xml

        - name: Show PHPCS results in PR
          run: cs2pr ./phpcs-report.xml

        - name: Run psalm
          if: success() || failure()
          env:
            db_dsn: 'sqlite:///:memory:'
          run: vendor/bin/psalm --output-format=github --php-version=8.1

        - name: Run phpstan
          if: success() || failure()
          env:
            db_dsn: 'sqlite:///:memory:'
          run: vendor/bin/phpstan analyse --error-format=github


  testsuite-windows:
    runs-on: windows-2019
    name: Windows - PHP 8.2

    env:
      EXTENSIONS: mbstring, intl, pdo_mysql
      PHP_VERSION: '8.2'

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: ${{ env.EXTENSIONS }}
        ini-values: apc.enable_cli = 1, extension = php_fileinfo.dll
        coverage: none

    - uses: ankane/setup-mysql@v1
      with:
        database: test
        mysql-version: 5.7

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Composer install
      run: composer update

    - name: Run PHPUnit
      env:
        db_dsn: 'mysql://root@localhost/test'
      run: |
          vendor/bin/phpunit --group mysql
